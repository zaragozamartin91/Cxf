package mz.ex.ws;

import org.apache.cxf.endpoint.Client;
import org.apache.cxf.frontend.ClientProxy;

import client.MessageChangeInterceptor;
import https.wssba_prismamp_com.INetworkService;
import https.wssba_prismamp_com.Service;
import https.wssba_prismamp_com.entities.ArrayOfFingerDto;
import https.wssba_prismamp_com.entities.DocumentDto;
import https.wssba_prismamp_com.entities.FingerDto;
import https.wssba_prismamp_com.entities.RequestDto;
import https.wssba_prismamp_com.entities.VerifyRequest;

/**
 * This class was generated by Apache CXF 3.1.10 2017-04-25T10:28:30.414-03:00 Generated source version: 3.1.10
 * 
 */
public class ServiceClient {

	public static void main(String[] args) throws Exception {
		/*
		 * Este truststore tiene que tener importado el certificado del keystore generado para encriptar las conexiones
		 * ssl de tomcat.
		 * 
		 * Este truststore se utilizara para encriptar la conexion ssl, no necesariamente para encriptar o firmar el
		 * mensaje.
		 */
		System.setProperty("javax.net.ssl.trustStore", "cert/SRVSBAWB01-PROD2.jks");
		System.setProperty("javax.net.ssl.trustStorePassword", "macro");

		System.setProperty("javax.net.debug", "ssl");

		/* ESTAS LINEAS SON PARA VISUALIZAR LOS MENSAJES SOAP ENVIADOS */
		System.setProperty("com.sun.xml.ws.transport.http.client.HttpTransportPipe.dump", "true");
		System.setProperty("com.sun.xml.internal.ws.transport.http.client.HttpTransportPipe.dump", "true");
		System.setProperty("com.sun.xml.ws.transport.http.HttpAdapter.dump", "true");
		System.setProperty("com.sun.xml.internal.ws.transport.http.HttpAdapter.dump", "true");

		/*
		 * ESTE SERVICIO ES INVOCADO SIN new org.apache.cxf.ws.addressing.WSAddressingFeature() DADO QUE EL WSDL NO
		 * CONTIENE UNA CLAUSULA <wsam:Addressing /> o <wsam:UsingAddressing /> POR LO TANTO NO ES NECESARIO ENVIAR UN
		 * <Address/> EN EL SOAP NI TAMPOCO SE ESPERA QUE LA RESPUESTA TENGA UN <Address/>
		 */
		INetworkService port = new Service().getWSHttpBindingINetworkService(new org.apache.cxf.ws.addressing.WSAddressingFeature());

		/* EL SIGUIENTE FRAGMENTO DE CODIGO AGREGA UN INTERCEPTADOR DE MENSAJES PARA MENSAJES QUE ESTAN POR SALIR */
		Client client = ClientProxy.getClient(port);
		client.getOutInterceptors().add(new MessageChangeInterceptor());

		DocumentDto document = new DocumentDto();
		document.setDocumentNumber("27317040283");
		document.setNationality("ARG");
		document.setTypeId("CUIL");

		ArrayOfFingerDto fingers = new ArrayOfFingerDto();
		FingerDto finger = new FingerDto();
		finger.setFingerType("UNKNOWN");
		finger.setFingerprintType("LiveScanPlain");
		finger.setIsAmputation(false);
		finger.setTemplateFormat("ANSI378");
		fingers.getFingerDto().add(finger);

		RequestDto request = new RequestDto();
		request.setEntity("30517948205");

		VerifyRequest verifyRequest = new VerifyRequest();
		verifyRequest.setDocument(document);
		verifyRequest.setFingers(fingers);
		verifyRequest.setRequest(request);
		port.verify(verifyRequest);
	}

}